name: Build, Test, and Publish with Coverage

on:
  push:
    branches:
      - main

env:
  MAJOR_VERSION: 3

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Compose
        run: |
          docker-compose up -d --build

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Build Project
        run: |
          dotnet build --configuration Release

      - name: Run Code Coverage
        run: |
          dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/Coverage/

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./Database.MongoDB.Migration.Test/TestResults/Coverage/

      - name: Check and increment version numbers
        if: success()
        id: version_control
        run: |
          MINOR_VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name' | cut -c3- | awk -F. '{print $2}')
          PATCH_VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name' | cut -c3- | awk -F. '{print $3}')
          
          if [ "$MAJOR_VERSION" != "${{ github.event.inputs.previous_major_version }}" ]; then
            MINOR_VERSION=0
            PATCH_VERSION=0
          else
            MINOR_VERSION=$((MINOR_VERSION + 1))
            PATCH_VERSION=0
          fi
          
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV
          echo "MINOR_VERSION=$MINOR_VERSION" >> $GITHUB_ENV
          echo "PATCH_VERSION=$PATCH_VERSION" >> $GITHUB_ENV
          echo "${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}";

      - name: Pack NuGet package
        if: success()
        run: dotnet pack --configuration Release --version "${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}"

      - name: Publish NuGet package
        if: false
        run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json"

      - name: Down Docker
        run: |
          docker-compose down